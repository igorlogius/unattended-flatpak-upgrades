#!/usr/bin/env bash

# -----------------------------------------------------------------------------
# DESCRIPTION: 
# -----------------------------------------------------------------------------
# auto updates flatpak apps which dont have remote permission changes so the 
# user doenst have to worry about an app aquiring addional permission without 
# his knowlege and explicit consent

# -----------------------------------------------------------------------------
# CONFIGURATION PARAMETERS: 
# -----------------------------------------------------------------------------
LOGFILE=$(basename ${BASH_SOURCE[0]}) # same name as script (no ext)
LOGDIR=~/.logs   # will be created if necessary 
DEBUG=0          # show a bit more info values: on:1 and off:0

# -----------------------------------------------------------------------------
# OPEN TODOS:
# -----------------------------------------------------------------------------
# - replace crudini with something lighter

# -----------------------------------------------------------------------------
# Temp Files
# -----------------------------------------------------------------------------
LOCAL=$(mktemp)
REMOTE=$(mktemp)
DIFF=$(mktemp)

# -----------------------------------------------------------------------------
# define help to source some files 
# -----------------------------------------------------------------------------
function source_if_exists {
    while [ $# -gt 0 ];do
        if [[ -r $1 ]] ;then
            if [ $DEBUG -ne 0 ];then
                echo "DEBUG: loading env from $1"
            fi
            source $1
        fi
        shift
    done
}

# -----------------------------------------------------------------------------
# define cleanup handler 
# -----------------------------------------------------------------------------
function cleanup {
    rm -f $LOCAL $REMOTE $DIFF
    echo "INFO: $(date +%F_%R) done"
}

# -----------------------------------------------------------------------------
# filter harmless metadata 
# -----------------------------------------------------------------------------
function filter_harmless() {
    cat /dev/stdin | {
        # ref. https://www.man7.org/linux/man-pages/man5/flatpak-metadata.5.html
        declare -a harmless=("Extra Data" "Application" "Runtime" "Instance" )
        while read line;do
            isHarmless=0
            ## now loop through the above array
            for i in "${harmless[@]}";do
                # check if line matches pattern
                echo "$line" | grep "^\[ $i \] " >/dev/null
                RET=$?
                # 1 <=> no match => output
                if [ $RET -eq 0 ];then
                    isHarmless=1
                    break;
                fi
            done
            #echo $isHarmless $line
            if [ $isHarmless -eq 0 ];then
                echo $line
            fi
        done
    }
}

# -----------------------------------------------------------------------------
# register cleanup handler 
# -----------------------------------------------------------------------------
trap cleanup EXIT;

# -----------------------------------------------------------------------------
# check required dependencies 
# -----------------------------------------------------------------------------
MISSING_BIN=0
for bin in flatpak tail mktemp mkdir crudini tee grep echo rm basename;do
	type "$bin" >/dev/null 2>&1 || { echo "ERROR: missing $bin"; MISSING_BIN=1; }
done
if [ $MISSING_BIN -ne 0 ];then
	echo "ERROR: aborting because of missing dependencies"
fi

# -----------------------------------------------------------------------------
# check extra dependencies
# -----------------------------------------------------------------------------
NOTIFY_SEND=$(which notify-send)

# -----------------------------------------------------------------------------
# clone and redirect output
# -----------------------------------------------------------------------------
mkdir -p $LOGDIR >/dev/null 2>&1
exec &> >(tee -a $LOGDIR/$LOGFILE)
exec 2>&1

# -----------------------------------------------------------------------------
# Load some environments so flatpak does not miss the XDG_* paths
# -----------------------------------------------------------------------------
source_if_exists  /etc/profile  ~/.bash_profile  ~/.bashrc

# -----------------------------------------------------------------------------
# M A I N  
# -----------------------------------------------------------------------------
echo "INFO: $(date +%F_%R) started"


flatpak remote-ls --updates --app --columns=application,origin | tail -n+1 | 
{

    while read APPID ORIGIN; do

        # get local meta 
        flatpak --user info -m $APPID \
            | crudini --get --format=lines - \
            | filter_harmless \
            |sort > $LOCAL

        # get remote meta
        flatpak remote-info --show-metadata $ORIGIN $APPID \
            | crudini --get --format=lines - \
            | filter_harmless \
            | sort > $REMOTE

        # compare metas
        diff -y -w -B  $LOCAL $REMOTE 2>&1 > $DIFF
        RET=$?

        # auto update or skip update and log+notify 
        if [ $RET -eq 0 ];then
            if [ $DEBUG -ne 0 ];then
                echo "DEBUG: $APPID has no permission changes, auto updating"
            fi
            flatpak update --noninteractive --app $APPID >/dev/null
         else
            MSG="INFO: $APPID has permission changes, resolve via 'flatpak --user update $APPID'"
            cat $DIFF
            echo "$MSG"
            if [ ! "$NOTIFY_SEND" = "" ];then 
                # send notification
                $NOTIFY_SEND "flatpak: $APPID" "$MSG"
            fi
        fi
    done

}
# -----------------------------------------------------------------------------
# E O F
# -----------------------------------------------------------------------------
